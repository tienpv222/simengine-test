name: CI

on:
  pull_request:
    branches: [master]

jobs:
  build-enginecore:
    runs-on: ubuntu-latest
    container: obelavina/simengine-base:0.0.1

    services:
      redis:
        image: redis

    defaults:
      run:
        working-directory: ./enginecore

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ./venv
          key: v1-dependencies-${{ hashFiles('requirements.txt') }}

      - name: Installing SimEngine plugin library
        run: |
          mkdir /usr/lib64/simengine
          gcc -shared -o /usr/lib64/simengine/haos_extend.so -fPIC ./ipmi_sim/haos_extend.c

      - name: Installing python3 dependencies
        run: |
          python3 -m venv venv
          . venv/bin/activate
          python3 -m pip install -r ./requirements.txt
          python3 -m pip install -r ./dev-requirements.txt

      - name: Installing python2 dependencies
        run: python2 -m pip install snmpsim redis

      - name: Start neo4j inside the container
        run: |
          neo4j start
          sleep 5

      - name: Checking with black linter
        run: |
          . venv/bin/activate
          black --check --exclude venv .

      - name: Running python unittests
        run: |
          . venv/bin/activate
          python3 -m unittest discover tests

      - name: Running python BDD behave scenarios
        run: |
          . venv/bin/activate
          behave -k --stop --tags=~@not-ci-friendly

      # - store_artifacts:
      #     path: test-reports
      #     destination: test-reports
  # build-dashboard:
  #   runs-on: ubuntu-latest
  #   container: node

  #   defaults:
  #     run:
  #       working-directory: ./dashboard/frontend

  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v2

  #     # - restore_cache: # special step to restore the dependency cache
  #     #     key: dependency-cache-{{ checksum "package.json" }}
  #     # - run:
  #     #     name: Setup Dependencies
  #     #     command: npm install
  #     - name: Install Prettier
  #       run: npm install prettier --global
  #     - name: Run Prettier Check
  #       run: prettier --check 'config/**/*.js' 'src/**/*.js'
