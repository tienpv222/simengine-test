name: run_test

on:
  pull_request:
    branches: [master]

jobs:
  build-enginecore:
    runs-on: ubuntu-latest
    container: obelavina/simengine-base:0.0.1

    defaults:
      run:
        working-directory: ./enginecore

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Installing simengine plugin library
        run: |
          mkdir /usr/lib64/simengine
          gcc -shared -o /usr/lib64/simengine/haos_extend.so -fPIC ./ipmi_sim/haos_extend.c

      - name: Cache python3
        id: cache-python3
        uses: actions/cache@v2
        with:
          path: ./venv
          key: python3-cache-${{ hashFiles('**/dev-requirements.txt') }}

      - name: Installing python3 dependencies
        if: steps.cache-python3.outputs.cache-hit != 'true'
        run: |
          python3 -m venv venv
          . venv/bin/activate
          python3 -m pip install -r ./requirements.txt
          python3 -m pip install -r ./dev-requirements.txt

      - name: Installing python2 dependencies
        run: python2 -m pip install snmpsim redis

      - name: Run redis server
        run: redis-server --daemonize yes

      - name: Start neo4j inside the container
        run: |
          neo4j start
          sleep 5

      - name: Checking with black linter
        run: |
          . venv/bin/activate
          black --check --exclude venv .

      - name: Running python unittests
        run: |
          . venv/bin/activate
          python3 -m unittest discover tests

      - name: Running python BDD behave scenarios
        run: |
          . venv/bin/activate
          behave -k --stop --tags=~@not-ci-friendly

    # - uses: satackey/action-docker-layer-caching@v0.0.11

    # - name: Build Docker image
    #   run: docker build . --file Dockerfile --tag simengine

    # - run: |
    #     docker run simengine
    #     echo hello
    #     python --version
