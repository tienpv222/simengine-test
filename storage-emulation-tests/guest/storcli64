#!/usr/bin/env python
#
# storcli64 :: connector to emulate 'storcli64' storage tool
#              by passing args to simengine and receiving
#              stdio/stderr from simengine.
#
#              The connection to simengine is performed over
#              a qemu virtserial port connected to a TCP socket
#              on simengine. Communication is JSON-encoded over
#              the raw socket.
#
# Chris Tyler <chris.tyler@senecacollege.ca> 2018-12-06

from __future__ import print_function

import json
import time
import sys
import os

def eprint(*args, **kwargs):
    print(*args, file=sys.stderr, **kwargs)

def send_cmd(conn):
    conn.write(str(json.dumps({"argv": sys.argv})).encode())
    return simengine.readline()

# open a connection
simengine = open("/dev/virtio-ports/systems.cdot.simengine.storage.net", "r+b", 0)

# wait for the daemon running on the host to respond:
response_msg = send_cmd(simengine)
while not response_msg:
    response_msg = send_cmd(simengine)
    time.sleep(1)

received = json.loads(response_msg)

# print out storcli64 output
if len(received["stdout"]) > 0:
    print(received["stdout"])
if len(received["stderr"]) > 0:
    eprint(received["stderr"])

# End: tidy and wrap
simengine.close()
sys.exit(received["status"])
